% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.R
\name{create_breaks}
\alias{create_breaks}
\title{Create breaks based on numeric input}
\usage{
create_breaks(
  x,
  breaks,
  format = FALSE,
  precision,
  divider = "-",
  left.open = FALSE,
  rightmost.closed = FALSE,
  ...
)
}
\arguments{
\item{x}{Numeric vector to create break groupings from.}

\item{breaks}{Numeric vector of breakpoints supplied to \code{\link{findInterval}}.}

\item{format}{Provide your own labels; if set to \code{TRUE} the clean labeling will be set automatically.}

\item{precision}{Numeric value, determines how to adjust boundary of labels. Default will determine from provided breaks.}

\item{divider}{Character defining the symbol separating adjacent label values (default is a dash).}

\item{left.open}{Logical; passed to \code{\link{findInterval}}.}

\item{rightmost.closed}{Logical; passed to \code{\link{findInterval}}.}

\item{...}{Additional parameters supplied to \code{\link{findInterval}}}
}
\value{
Vector with assignment for each grouping (numeric if no format provided, factor when format provided)
}
\description{
Break continuous values into bins and apply clean labeling. Wraps around \code{\link{findInterval}} and \code{\link{factor}} functions.
}
\details{
For edge cases, ensure that labeling is suitable. For example, if you do not want the upper boundaries included then adjustments must be made to the
values sent to \code{findInterval} via \code{...}. When providing custom labels to the \code{format} parameter ensure you have compensated for a label that
may sit outside the typical boundary of your provided breaks (e.g. <0 if you lowest break is 0 but your data can take on negative values).
If this function is not providing what you require, try looking at \code{\link{cut}}. If you need the ability to automatically cut groups into defined sizes
look at the \code{{classInt}} or provide \code{\link{cut}} a single value for the number of equal breaks to create.

Adjusting the \code{precision} affects the rounding percision of the labels. By default it will use the smallest decimal place in the parameter \code{brks}
}
\examples{

# Data setup
data = c(-1,0,10,5,999,9)
breaks = c(0, 1, 10,50,100)
labels = c('<0', '0-1', '1-10', '10-50', '50-100', '100+')

#If many break labels, try using rep() or seq(), and paste them in
labels2 = purrr::map2_chr(seq(10, 99, 10),  seq(20, 100, 10)-1, ~paste0(.x, '-', .y))

# Create break without any formatting
breaks_numeric <- create_breaks(data, breaks)

# Create break with default label formatting
breaks_auto <- create_breaks(data, breaks, TRUE)

# Create break with custom label formatting
breaks_custom <- create_breaks(data, breaks, labels)

}
