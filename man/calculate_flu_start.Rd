% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate.R
\name{calculate_flu_start}
\alias{calculate_flu_start}
\title{Calculate the date flu season begins each year}
\usage{
calculate_flu_start(
  year = format(Sys.Date(), "\%Y"),
  week = NA,
  flu_wk_start = 35L,
  week_start = 7
)
}
\arguments{
\item{year}{Character vector of years to determine flu week start dates (default is current year).}

\item{week}{Optional parameter for higher resolution of flu week start based on \code{flu_wk_start} parameter.}

\item{flu_wk_start}{Week of the year that flu season begins (default set to 35).}

\item{week_start}{Integer value for start of week (default: 7, Sunday).}
}
\value{
Vector of dates.
}
\description{
Assuming flu season starting on Sunday of week 35 each year, providing the year will return the full date this begins.
}
\details{
For a higher resolution, you can provide a week number to the \code{week} parameter. For example, on week 1 of Jan 2023, it may be desired to
have the 2022 flu year as reference instead of 2023. This avoids some manipulation of inputs using other functions like \code{\link{convert_date2fluseason}}.
However, unlike the \code{year} parameter, this is not currently vectorized and requires \code{mapply} to assist in looping, see examples.
}
\examples{
\dontrun{
# Find start dates for each week...
calculate_flu_start(2022); calculate_flu_start('2022');
calculate_flu_start('2022') + seq(0, 7*10, by =7)
calculate_flu_start(c(2020, 2021, 2022))
lapply(calculate_flu_start(c(2020, 2021, 2022)), function(x) x + seq(0, 7*10, by =7))

# Using weekly resolution
calculate_flu_start(2022, 34)
mapply(calculate_flu_start, c(2022, 2022), week = c(34,35), SIMPLIFY = FALSE) # As list
do.call('c', mapply(calculate_flu_start, c(2022, 2022), week = c(34,35), SIMPLIFY = FALSE)) # As vector
Reduce('c', mapply(calculate_flu_start, c(2022, 2022), week = c(34,35), SIMPLIFY = FALSE)) # Same as above in effect
}
}
