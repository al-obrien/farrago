% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate.R
\name{round_up_nice}
\alias{round_up_nice}
\title{Round up to a 'nice' number.}
\source{
Adapted from \href{https://stackoverflow.com/users/662787/tommy}{Tommy's} StackOverflow contribution:
\url{https://stackoverflow.com/questions/6461209/how-to-round-up-to-the-nearest-10-or-100-or-x}
}
\usage{
round_up_nice(x, nice = seq(1, 10))
}
\arguments{
\item{x}{A data object.}

\item{nice}{A numeric vector defining base values that the user believes are 'nice'.}
}
\value{
A numeric vector with all numbers rounded up nicely.
}
\description{
\code{round_up_nice} will examine a vector of numbers and round each upwards to a 'nice' value.
}
\details{
The function is vectorized so that multiple inputs can be examined without having to define any specific loops.

When defining a vector of numeric values for \code{nice}, one must consider that these values will be used to determine the extend the number is rounded up.
For example, if the number to round is 10.1, with the default \code{nice}, this will round to 20. This is determined by taking the base-10 log of the input value
raising it to the power of 10 and then multiplying that value by each \code{nice} value; the value selected is the lowest of which is bigger than the input. The
calculation would follow as such:
\deqn{10^floor(log10(10.1)) = 1}
\deqn{10^1 = 10}
\deqn{10 * (1,2,4,5,6,8,10) = 10  20  40  50  60  80 100}
So, 20 would be selected as it is the closest value in this range that is greater than 10.1. Adjust the \code{nice} to suit the situation.
}
\examples{
round_up_nice(x=c(1,4,5,10.1,55.5,60.2, 1001.3), nice = c(1,2,4,14))

}
\seealso{
\code{\link[base]{pretty}}
}
