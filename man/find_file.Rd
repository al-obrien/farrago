% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transfer.R
\name{find_file}
\alias{find_file}
\title{Find (n-latest) file}
\usage{
find_file(
  path,
  name_pattern,
  slice_n = NULL,
  date_filter = NULL,
  date_pattern = NULL,
  date_format = NULL,
  ...
)
}
\arguments{
\item{path}{File path that contains files of interest (can look into child folders using \code{recursive = TRUE}).}

\item{name_pattern}{Basic regular expression to discover names within a file path.}

\item{slice_n}{Grab the n-th file from the list (descending order by date). Default set to \code{NULL}, entire list is returned. Set to \code{1} if want just the latest match returned.}

\item{date_filter}{Reduce set of discovered file based upon a date threshold (default: \code{NULL}, no filtering occurs).}

\item{date_pattern}{Regular expression to search file name for date, parsed with \code{date_format} parameter.}

\item{date_format}{POSIX formatted dates or date/times (e.g. \code{"\%Y-\%m-\%d \%H-\%M"}).}

\item{...}{Additional parameters passed to \code{\link{list.files}}.}
}
\value{
Returns character vector, file name.
}
\description{
Find particular file within a directory and return its name/path.
}
\details{
There are two ways to discover the n-th file of interest. Based upon the file name search pattern, the date is sorted either by
creation date (\code{ctime}) or a provided pattern (\code{date_pattern}) and format (\code{date_format}) within the file name itself.
}
\examples{
\dontrun{
# Find latest file for particular excel file using basic pattern
latest_file <- find_file("/taget_folder",
                 "^target_name.*\\\\.xlsx",
                 recursive = TRUE)

# Find latest .rds file by the date in the file name itself
latest_file <- find_file(path = "./taget_folder",
                 name_pattern = "^target_data_(\\\\d{4}\\\\-\\\\d{2}\\\\-\\\\d{2})[ ]({1}\\\\d{2}\\\\-\\\\d{2})\\\\.rds$",
                 date_pattern = "(\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s\\\\d{2}-\\\\d{2})",
                 date_format = "\%Y-\%m-\%d \%H-\%M",
                 date_filter = lubridate::today()-10, # Only keep less than today and slice the top value
                 full.names=FALSE)
}
}
