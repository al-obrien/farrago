% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transfer.R
\name{retrieve}
\alias{retrieve}
\title{Retrieve a 'stowed' object.}
\usage{
retrieve(
  stowed_object,
  keep_name = FALSE,
  cleanup = FALSE,
  as.data.table = FALSE,
  envir = .GlobalEnv,
  ...
)
}
\arguments{
\item{stowed_object}{S3 object created by \code{\link{stow}}.}

\item{keep_name}{Logical value; default is \code{FALSE}, used if want the object name originally used to be automatically
\code{\link{assign}}ed to the provided environment.}

\item{cleanup}{Logical value; default is \code{FALSE}, will remove the object from the hard-drive.}

\item{as.data.table}{Logical value; if 'fst' method used, returns as a data.table object (requires data.table installed).}

\item{envir}{Location for imported object to be saved.}

\item{...}{Additional arguments based to the read function of the respective method.}
}
\value{
R data object previously stored on hard drive.
}
\description{
\code{retrieve} will load an object that was previously stowed via \code{\link{stow}} back to the provided R environment.
}
\details{
This function will load an object, initially created by \code{\link{stow}}, from the hard-drive ('.rds', '.csv', or '.fst' file). \code{retrieve}
requires the S3 object output from \code{\link{stow}} in order to load the object. This is to ensure the correct location, name, and method are used.
File types of '.rds', '.csv', and '.fst' can be loaded quickly into an R session.
}
\examples{
\dontrun{
# Create fake data
temp_data <- data.frame(col1 = rpois(100, 1), col2 = runif(100))

# Stow an object
temp_data_stowed <- stow(object = temp_data, method = 'fst', cleanup = TRUE)

# Retrieve an object
temp_data <- retrieve(stowed_object = temp_data_stowed, cleanup = TRUE)
}
}
